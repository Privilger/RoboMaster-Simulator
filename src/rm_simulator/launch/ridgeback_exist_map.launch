<launch>
  <arg name="rviz"      default="true"/>

  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="world_name" default="$(find rm_simulator)/worlds/2020Tag.world"/>

  <!-- Configuration of Jackal which you would like to simulate.
       See jackal_description for details. -->
  <!-- <arg name="config" default="empty" /> -->
  <arg name="config" default="custom" />

  <!-- Launch Gazebo with the specified world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="world_name" value="$(arg world_name)" />
  </include>

  <!-- Load Ridgeback's description, controllers, and teleop nodes. -->
  <include file="$(find ridgeback_description)/launch/description.launch">
    <arg name="config" value="$(arg config)" />
  </include>
  <include file="$(find ridgeback_control)/launch/control.launch" />
  <include file="$(find ridgeback_control)/launch/teleop.launch">
    <arg name="joystick" value="false"/>
  </include>

  <rosparam param="/gazebo_ros_control/pid_gains">
    front_left_wheel:
      p: 1
      i: 0.1
      d: 0
    front_right_wheel:
      p: 1
      i: 0.1
      d: 0
    rear_left_wheel:
      p: 1
      i: 0.1
      d: 0
    rear_right_wheel:
      p: 1
      i: 0.1
      d: 0
    front_camera_pivot_joint:
      p: 5
      i: 0.08
      d: 0
  </rosparam>

  <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" args="_use_gui:=true"/>  -->

  <node name="turret_controller" pkg="rm_simulator" type="turret_controller"/> 

  <!-- Spawn Ridgeback -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -model ridgeback -param robot_description -x 1 -y 1 -z 0.1" />

  <!--Load parameters for localization node  -->
  <rosparam command="load" file="$(find roborts_localization)/config/localization.yaml" />
  <rosparam command="load" file="$(find roborts_localization)/amcl/config/amcl.yaml" />

  <!-- Run the localization node -->
  <node pkg="roborts_localization" type="localization_node" name="localization_node" respawn="false" >
  </node>
  <!-- <include file="$(find rm_simulator)/launch/include/amcl_ridgeback.launch" /> -->

  <!-- Run the global planner node -->
  <node pkg="roborts_planning" type="global_planner_node" name="global_planner_node" respawn="false" />

  <!-- Run the local planner node -->
  <node pkg="roborts_planning" type="local_planner_node" name="local_planner_node" respawn="false" >
    <remap from="/odom" to="/odometry/filtered"/>
  </node>

  <node name="behavior_test_node" pkg="roborts_decision" type="behavior_test_node" output="screen"/> 

  <node name="acc2vel_node" pkg="rm_simulator" type="acc2vel_node" respawn="false"/> 

  <node name="map_server" pkg="map_server" type="map_server" args="$(find rm_simulator)/maps/map2020.yaml"/>

<!-- View in RVIZ. -->
<group if="$(arg rviz)">
  <node name="ridgeback_viz" pkg="rviz" type="rviz" args="-d $(find rm_simulator)/rviz/ridgeback_viz.rviz" >
    <!-- <remap from="/move_base_simple/goal" to="/$(arg ns0)/move_base_simple/goal"/> -->
  </node>
</group>

</launch>
